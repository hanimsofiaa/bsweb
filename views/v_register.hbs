<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <link rel="stylesheet" href="/style.css">
    <title>Register</title>
</head>

<body>
    <nav>
        <h4>Bariact</h4>
        <ul>
            <li><a href="/">Home</a></li>
            <li><a href="/login">Login</a></li>
            <li><a href="/register">Register</a></li>
        </ul>
    </nav>

    <div class="container mt-4">
       <div class="card">
		      <div class="card-header">Register Form</div>
          <div class="card-body">
            <form action="/auth/register" method="POST">
              
              <div class="form-group" style="padding: 5px;">
                <label for="email">Email address</label>
                <input type="email" class="form-control" id="email" name="email" aria-describedby="emailHelp" placeholder="Enter Email">
              </div>
                        
              <div class="form-group" style="padding: 5px;">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" class="form-control" placeholder="Password" pattern="(?=.*[!@#$%^&*)(+=._-])(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}" title="Must contain at least one number, one special character and one uppercase and lowercase letter, and at least 8 or more characters" required>
              </div>

              <div id="messagePassword">
                <small>Password must contain the following:</small><br>
                <small id="letter" class="invalid">A lowercase letter</small><br>
                <small id="capital" class="invalid">A capital (uppercase) letter</small><br>
                <small id="number" class="invalid">A number </small><br>
                <small id="length" class="invalid">Minimum 8 characters</small><br>
                <small id="specialchar" class="invalid">Minimum 1 special character</small><br>
              </div>
              
                        
              <div class="form-group" style="padding: 5px;">
                <label for="passwordConfirm">Confirm Password</label>
                <input type="password" class="form-control" id="passwordConfirm" name="passwordConfirm" placeholder="Confirm Password">
              </div>
              
              <div class="form-group" style="padding: 5px;">
                <label for="ic">IC</label>
                <input type="text" class="form-control" id="ic" name="ic" placeholder="Eg: 909090909090" pattern="(?=.*[0-9]).{12}" title="Must contain 12 digit numbers only" required>
              </div>
              
              <div id="messageIC">
                <small id="validateIC" class="invalid">IC must contain 12 Digit Numbers</small><br>
              </div>
              
              <div class="form-group" style="padding: 5px; width:fit-content">
                <label for="role">Select Role</label>
                <select class="form-select"  id="role" name="role" aria-label="role">
                  <option value="Patient" selected>Patient</option>
                  <option value="Doctor">Doctor</option>
                  <option value="Admin">Admin</option>
                </select>
              </div>
              
              <div class="form-group" style="padding: 5px;">
                <div class="btn-group">
                  <button type="submit" class="btn btn-primary" style="padding: 5px;">Register</button>
                </div>
              </div>
              
            </form>
          </div>
		    </div>
        {{#if message }}
        <h4 class "alert alert-danger mt-4">{{message}}</h4>
        {{/if}}
    </div>
</body>


<script 
src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" 
integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" 
crossorigin="anonymous">
</script>

<script>

//IC Validation
var myIC = document.getElementById("ic");
var valIC = document.getElementById("validateIC");

// When the user clicks on the field, show the message box
myIC.onfocus = function() {
  document.getElementById("messageIC").style.display = "block";
}

// When the user clicks outside of the field, hide the message box
myIC.onblur = function() {
  document.getElementById("messageIC").style.display = "none";
}

myIC.onkeyup = function() {
  // Validate numbers and length
  var numbersIC= /[0-9]/g;
  if(myIC.value.match(numbersIC) && myIC.value.length == 12) {
    valIC.classList.remove("invalid");
    valIC.classList.add("valid");
  } else {
    valIC.classList.remove("valid");
    valIC.classList.add("invalid");
  }
}


//Pasword Validation
var myInput = document.getElementById("password");
var letter = document.getElementById("letter");
var capital = document.getElementById("capital");
var number = document.getElementById("number");
var length = document.getElementById("length");
var specialchar = document.getElementById("specialchar");

// When the user clicks on the password field, show the message box
myInput.onfocus = function() {
  document.getElementById("messagePassword").style.display = "block";
}

// When the user clicks outside of the password field, hide the message box
myInput.onblur = function() {
  document.getElementById("messagePassword").style.display = "none";
}

// When the user starts to type something inside the password field
myInput.onkeyup = function() {
  // Validate lowercase letters
  var lowerCaseLetters = /[a-z]/g;
  if(myInput.value.match(lowerCaseLetters)) {
    letter.classList.remove("invalid");
    letter.classList.add("valid");
  } else {
    letter.classList.remove("valid");
    letter.classList.add("invalid");
}

  // Validate capital letters
  var upperCaseLetters = /[A-Z]/g;
  if(myInput.value.match(upperCaseLetters)) {
    capital.classList.remove("invalid");
    capital.classList.add("valid");
  } else {
    capital.classList.remove("valid");
    capital.classList.add("invalid");
  }

  // Validate numbers
  var numbers = /[0-9]/g;
  if(myInput.value.match(numbers)) {
    number.classList.remove("invalid");
    number.classList.add("valid");
  } else {
    number.classList.remove("valid");
    number.classList.add("invalid");
  }

  // Validate length
  if(myInput.value.length >= 8) {
    length.classList.remove("invalid");
    length.classList.add("valid");
  } else {
    length.classList.remove("valid");
    length.classList.add("invalid");
  }
  
  // Validate special character
  var char = /[!@#$%^&*)(+=._-]/g;
  if(myInput.value.match(char)) {
    specialchar.classList.remove("invalid");
    specialchar.classList.add("valid");
  } else {
    specialchar.classList.remove("valid");
    specialchar.classList.add("invalid");
  }
}

</script>



</html>
